apply plugin: 'com.android.application'
apply plugin: 'android-apt'
apply plugin: 'me.tatarka.retrolambda'

def firebaseEnabled = false
android {
    compileSdkVersion 25
    buildToolsVersion '25.0.2'
    defaultConfig {
        applicationId "pl.librus.client"
        minSdkVersion 21
        targetSdkVersion 25
        multiDexEnabled true
        versionCode 13
        versionName "1.4r"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }
    }

    productFlavors {
        full {
            resValue "string", "app_name", "Dziennik"
            applicationIdSuffix ""
        }
        foss {
            resValue "string", "app_name", "Dziennik"
            applicationIdSuffix ""
        }
        dev {
            resValue "string", "app_name", "Dziennik (dev)"
            applicationIdSuffix ".dev"
        }
    }

    applicationVariants.all { variant ->
        variant.resValue "string", "versionName", variant.versionName
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {

        exclude group: 'com.android.support', module: 'support-annotations'
    })
    //noinspection GradleDependency
    compile('com.mikepenz:materialdrawer:5.8.2@aar') {
        transitive = true
    }

    compile group: 'org.hibernate.javax.persistence', name: 'hibernate-jpa-2.0-api', version: '1.0.1.Final'

    compile fileTree(dir: "libs", include: ["*.jar"])

    compile 'com.android.support:support-v4:25.2.0'
    compile 'com.android.support:multidex:1.0.1'
    compile 'com.android.support:appcompat-v7:25.2.0'
    compile 'com.android.support:design:25.2.0'
    compile 'com.android.support:cardview-v7:25.2.0'
    compile 'com.android.support:recyclerview-v7:25.2.0'
    compile 'com.android.support:preference-v14:25.2.0'
    compile 'com.google.guava:guava:20.0'
    compile 'joda-time:joda-time:2.9.4'
    compile 'com.afollestad.material-dialogs:core:0.9.0.2'
    compile 'com.amulyakhare:com.amulyakhare.textdrawable:1.0.1'
    compile 'com.github.boxme:asyncmanager:1.0.0'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.8.7'
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-joda:2.8.7'
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-guava:2.8.7'
    compile 'io.requery:requery:1.2.1'
    compile 'io.requery:requery-android:1.2.1'
    compile 'eu.davidea:flexible-adapter:5.0.0-rc1'
    compile 'net.sourceforge.streamsupport:streamsupport:1.5.3'
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    compile 'io.reactivex.rxjava2:rxjava:2.0.8'
    compile 'com.squareup.okhttp3:okhttp:3.6.0'
    testCompile 'junit:junit:4.12'
    testCompile 'org.robolectric:robolectric:3.3.2'
    testCompile 'org.robolectric:shadows-multidex:3.3.2'
    testCompile 'org.hamcrest:hamcrest-library:1.3'
    testCompile 'org.mockito:mockito-core:1.+'
    apt 'io.requery:requery-processor:1.2.1'
    apt 'org.immutables:value:2.4.4-SNAPSHOT'
    devCompile 'com.thedeanda:lorem:2.1'
    fullCompile 'com.google.android.gms:play-services-gcm:10.2.0'
    fullCompile 'com.google.firebase:firebase-core:10.2.0'
    fullCompile 'com.google.firebase:firebase-crash:10.2.0'
    provided 'org.immutables:value:2.4.4-SNAPSHOT'
    compile "com.google.dagger:dagger:2.10"
    apt "com.google.dagger:dagger-compiler:2.10"
    provided 'javax.annotation:jsr250-api:1.0'

}
if (getGradle().getStartParameter().getTaskRequests().toString()
        .contains("Full")){
    apply plugin: 'com.google.gms.google-services'
    System.out.println("applying plugin")
}else{
    System.out.println("skipping applying plugin")
}
